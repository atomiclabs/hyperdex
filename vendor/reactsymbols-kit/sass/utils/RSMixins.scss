
@mixin user-select($us){
	-webkit-user-select: ($us);
	-moz-user-select: ($us);
	-ms-user-select: ($us);
	-o-user-select: ($us);
	user-select: ($us);
}

@mixin size($width: 5px, $height: 5px){
	width: $width;
	height: $height;
}
@mixin square($size: 5px){
	width: $size;
	height: $size;
}

@mixin rounded($radius: 5px){
  -webkit-border-radius: $radius;
	 -moz-border-radius: $radius;
		  border-radius: $radius;
}

@mixin border-radius($topleft: 0, $topright: 0, $bottomleft: 0, $bottomright: 0){
	-webkit-border-top-right-radius : $topright;
	-webkit-border-bottom-right-radius : $bottomright;
	-webkit-border-bottom-left-radius : $bottomleft;
	-webkit-border-top-left-radius : $topleft;
	-moz-border-radius-topright : $topright;
	-moz-border-radius-bottomright : $bottomright;
	-moz-border-radius-bottomleft : $bottomleft;
	-moz-border-radius-topleft : $topleft;
	border-top-right-radius : $topright;
	border-bottom-right-radius : $bottomright;
	border-bottom-left-radius : $bottomleft;
	border-top-left-radius : $topleft;
}


@mixin switchBorderRadius($borderRadius){
  @if $borderRadius == 4px {
    @include rounded(999px);
  } @else {
    @include rounded($borderRadius);
  }
}

@mixin box-shadow($shadow: 0 1px 3px rgba(0,0,0,.25)){
  -webkit-box-shadow: $shadow;
	 -moz-box-shadow: $shadow;
		  box-shadow: $shadow;
}

@mixin box-sizing($boxmodel){
  -webkit-box-sizing: $boxmodel;
	 -moz-box-sizing: $boxmodel;
	  -ms-box-sizing: $boxmodel;
		  box-sizing: $boxmodel;
}

@mixin set($property, $color, $opacity: 0.5, $defaultColor: $grayLightColor) {
	@if type-of($color) == color {
		#{$property}: $color;
		#{$property}: rgba($color, $opacity);
	} @else {
		#{$property}: rgba($defaultColor, $opacity);
	}
}

@mixin transition($transition){
  -webkit-transition: $transition;
	 -moz-transition: $transition;
	  -ms-transition: $transition;
	   -o-transition: $transition;
		  transition: $transition;
}

@mixin rotate($degrees){
  -webkit-transform: rotate($degrees);
	 -moz-transform: rotate($degrees);
	  -ms-transform: rotate($degrees);
	   -o-transform: rotate($degrees);
		  transform: rotate($degrees);
}

@mixin scale($ratio){
  -webkit-transform: scale($ratio);
	 -moz-transform: scale($ratio);
	  -ms-transform: scale($ratio);
	   -o-transform: scale($ratio);
		  transform: scale($ratio);
}
@mixin translate3d($x: 0, $y: 0, $z: 0){
  -webkit-transform: translate3d($x, $y, $z);
	 -moz-transform: translate3d($x, $y, $z);
	  -ms-transform: translate3d($x, $y, $z);
	   -o-transform: translate3d($x, $y, $z);
		  transform: translate3d($x, $y, $z);
}
@mixin translate($x: 0, $y: 0){
  -webkit-transform: translate($x, $y);
	 -moz-transform: translate($x, $y);
	  -ms-transform: translate($x, $y);
	   -o-transform: translate($x, $y);
		  transform: translate($x, $y);
}
@mixin translateX($x: 0){
  -webkit-transform: translateX($x);
	 -moz-transform: translateX($x);
	  -ms-transform: translateX($x);
	   -o-transform: translateX($x);
		  transform: translateX($x);
}
@mixin translateY($y: 0){
  -webkit-transform: translateY($y);
	 -moz-transform: translateY($y);
	  -ms-transform: translateY($y);
	   -o-transform: translateY($y);
		  transform: translateY($y);
}

@mixin animation($a){
  -webkit-animation: ($a);
	 -moz-animation: ($a);
	  -ms-animation: ($a);
	   -o-animation: ($a);
		  animation: ($a);
}

@mixin preserve3d($preserve-3d){
	-webkit-transform-style: $preserve-3d;
  	-moz-transform-style: $preserve-3d;
  	transform-style: $preserve-3d;
}