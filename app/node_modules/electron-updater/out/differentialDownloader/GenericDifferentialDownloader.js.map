{"version":3,"file":"GenericDifferentialDownloader.js","sourceRoot":"","sources":["../../src/differentialDownloader/GenericDifferentialDownloader.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA,AAAO,AAAE,AAAmB,AAAY,AAAM,AAAsC;;;;;;;;;;AACpF,AAAO,AAAE,AAAQ,AAAE,AAAM,AAAY;;;;;;;;;;AACrC,AAAO,AAAK,AAAI,AAAM,AAAM;;AAC5B,AAAO,AAAE,AAAsB,AAAE,AAAM,AAA0B,AAEjE,AAAM;;;;;;;;;;;;MAAqC,sCAAQ,AAAsB;AACjE,AAAQ,UAAd,AAAK,CAAU,AAAqB;;;;AAClC,YAAM,AAAI,MAAC,AAAU,YAAC,MAAM,AAAQ,0BAAC,AAAI,KAAC,AAAI,KAAC,AAAO,QAAC,AAAe,eAAE,AAAI,MAAE,AAAmB,AAAC,AAAC,uCAAE,AAAW,AAAC,AACnH;;AAAC,AACF","sourcesContent":["import { BLOCK_MAP_FILE_NAME, BlockMap } from \"builder-util-runtime/out/blockMapApi\"\nimport { readJson } from \"fs-extra-p\"\nimport * as path from \"path\"\nimport { DifferentialDownloader } from \"./DifferentialDownloader\"\n\nexport class GenericDifferentialDownloader extends DifferentialDownloader {\n  async download(newBlockMap: BlockMap) {\n    await this.doDownload(await readJson(path.join(process.resourcesPath!!, \"..\", BLOCK_MAP_FILE_NAME)), newBlockMap)\n  }\n}"]}
