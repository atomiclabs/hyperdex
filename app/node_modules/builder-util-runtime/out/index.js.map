{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,AAAO,AAAE,AAAiB,AAAE,AAAiB,AAAE,AAAM,AAAqB;;;;;;;;;;AAC1E,AAAO,AAAE,AAAS,AAAE,AAAe,AAAE,AAAY,AAAmB,AAAe,AAAkB,AAAa,AAAE,AAAuB,AAAE,AAA8B,AAAE,AAAiB,AAAE,AAAS,AAAE,AAAM,AAAgB;;;;;;;;;;AACjO,AAAO,AAAsH,AAAwB,AAAW,AAAS,AAAsC,AAAM,AAAkB;;;;;;;;;;AAEvO,AAAO,AAAE,AAAO,AAAE,AAAM,AAAiB;;;;;;;;;;AACzC,AAAO,AAAE,AAAI,AAAE,AAAM,AAAQ;;;;;;;;;;AAC7B,AAAO,AAAE,AAAyB,AAAgB,AAAM,AAA6B;;;;;;;;;;AACrF,AAAO,AAAE,AAAQ,AAAE,AAAQ,AAAE,AAAM,AAAO,AAE1C,AAAM;;;;;;;;;;iBAAqB,AAAkC;AAC3D,MAAI,AAAC,KAAI,AAAI,MAAE;AACb,WAAO,AAAE;AACV,aACQ,AAAK,MAAC,AAAO,QAAC,AAAC,AAAC,IAAE;AACzB,WAAO,AAAC;AACT,GAFI,MAGA;AACH,WAAO,CAAC,AAAC,AAAC;AACX,AACH;AAAC,AAED,AAAM;;kBAAmB,AAAe,SAAE,AAAY;AACpD,QAAM,AAAK,QAAG,IAAI,AAAK,MAAC,AAAO,AAAC,AAAC;AAChC,AAAa,QAAC,AAAI,OAAG,AAAI;AAC1B,SAAO,AAAK,AACd;AAAC","sourcesContent":["export { CancellationToken, CancellationError } from \"./CancellationToken\"\nexport { HttpError, createHttpError, HttpExecutor, DownloadOptions, DigestTransform, RequestHeaders, safeGetHeader, configureRequestOptions, configureRequestOptionsFromUrl, safeStringifyJson, parseJson } from \"./httpExecutor\"\nexport { BintrayOptions, GenericServerOptions, GithubOptions, PublishConfiguration, S3Options, SpacesOptions, BaseS3Options, getS3LikeProviderBaseUrl, Publish, githubUrl, PublishProvider, AllPublishOptions } from \"./publishOptions\"\nexport { UpdateInfo, UpdateFileInfo, WindowsUpdateInfo, BlockMapDataHolder, PackageFileInfo, ReleaseNoteInfo } from \"./updateInfo\"\nexport { parseDn } from \"./rfc2253Parser\"\nexport { UUID } from \"./uuid\"\nexport { ProgressCallbackTransform, ProgressInfo } from \"./ProgressCallbackTransform\"\nexport { parseXml, XElement } from \"./xml\"\n\nexport function asArray<T>(v: null | undefined | T | Array<T>): Array<T> {\n  if (v == null) {\n    return []\n  }\n  else if (Array.isArray(v)) {\n    return v\n  }\n  else {\n    return [v]\n  }\n}\n\nexport function newError(message: string, code: string) {\n  const error = new Error(message);\n  (error as any).code = code\n  return error\n}"]}
