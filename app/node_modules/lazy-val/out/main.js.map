{"version":3,"file":"main.js","sourceRoot":"","sources":["../src/main.ts"],"names":[],"mappings":";;;;;;AAIE,gBAAY,AAAyB;AACnC,AAAI,aAAC,AAAO,UAAG,AAAO,AACxB;AAAC;AAED,QAAI,AAAQ;AACV,AAAM,eAAC,AAAI,KAAC,AAAO,WAAI,AAAI,AAC7B;AAAC;AAED,QAAI,AAAK;AACP,AAAE,AAAC,YAAC,AAAI,KAAC,AAAO,WAAI,AAAI,AAAC,MAAC,AAAC;AACzB,AAAM,mBAAC,AAAI,KAAC,AAAM,AACpB;AAAC;AAED,AAAI,aAAC,AAAK,QAAG,AAAI,KAAC,AAAO,AAAE;AAC3B,AAAM,eAAC,AAAI,KAAC,AAAM,AACpB;AAAC;AAED,QAAI,AAAK,MAAC,AAAiB;AACzB,AAAI,aAAC,AAAM,SAAG,AAAK;AACnB,AAAI,aAAC,AAAO,UAAG,AAAI,AACrB;AAAC,AACF","sourcesContent":["export class Lazy<T> {\n  private _value: Promise<T>\n  private creator: (() => Promise<T>) | null\n\n  constructor(creator: () => Promise<T>) {\n    this.creator = creator\n  }\n\n  get hasValue() {\n    return this.creator == null\n  }\n\n  get value(): Promise<T> {\n    if (this.creator == null) {\n      return this._value\n    }\n\n    this.value = this.creator()\n    return this._value\n  }\n\n  set value(value: Promise<T>) {\n    this._value = value\n    this.creator = null\n  }\n}"]}
