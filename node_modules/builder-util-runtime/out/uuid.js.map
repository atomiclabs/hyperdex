{"version":3,"file":"uuid.js","sourceRoot":"","sources":["../src/uuid.ts"],"names":[],"mappings":"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","sourcesContent":["import { createHash, randomBytes } from \"crypto\"\nimport { newError } from \"./index\"\n\nconst invalidName =\n  \"options.name must be either a string or a Buffer\"\n\nconst moreThan10000 =\n  \"can not generate more than 10000 UUIDs per second\"\n\n// Node ID according to rfc4122#section-4.5\nconst randomHost = randomBytes(16)\nrandomHost[0] = randomHost[0] | 0x01\n\n// randomize clockSeq initially, as per rfc4122#section-4.1.5\nconst seed = randomBytes(2)\nlet clockSeq = (seed[0] | (seed[1] << 8)) & 0x3fff\n\n// clock values\nlet lastMTime = 0\nlet lastNTime = 0\n\n// lookup table hex to byte\nconst hex2byte: any = {}\n\n// lookup table byte to hex\nconst byte2hex: Array<string> = []\n// populate lookup tables\nfor (let i = 0; i < 256; i++) {\n    const hex = (i + 0x100).toString(16).substr(1)\n    hex2byte[hex] = i\n    byte2hex[i] = hex\n}\n\n// UUID class\nexport class UUID {\n  private ascii: string | null = null\n  private binary: Buffer | null = null\n  private readonly version: number\n\n  // from rfc4122#appendix-C\n  static readonly URL = new UUID(\"6ba7b811-9dad-11d1-80b4-00c04fd430c8\")\n  static readonly OID = UUID.parse(\"6ba7b812-9dad-11d1-80b4-00c04fd430c8\")\n\n  constructor(uuid: Buffer | string) {\n    const check = UUID.check(uuid)\n    if (!check) {\n      throw new Error(\"not a UUID\")\n    }\n\n    this.version = check.version!!\n\n    if (check.format === \"ascii\") {\n      this.ascii = uuid as string\n    }\n    else {\n      this.binary = uuid as Buffer\n    }\n  }\n\n  static v1() {\n    return uuidTimeBased(randomHost)\n  }\n\n  static v5(name: string | Buffer, namespace: Buffer) {\n    return uuidNamed(name, \"sha1\", 0x50, namespace)\n  }\n\n  toString() {\n    if (this.ascii == null) {\n      this.ascii = stringify(this.binary!!)\n    }\n    return this.ascii\n  }\n\n  toBuffer() {\n    if (this.binary == null) {\n      this.binary = UUID.parse(this.ascii!!)\n    }\n    return Buffer.from(this.binary)\n  }\n\n  inspect() {\n    return `UUID v${this.version} ${this.toString()}`\n  }\n\n  static check(uuid: Buffer | string, offset: number = 0) {\n    if (typeof uuid === \"string\") {\n      uuid = uuid.toLowerCase()\n\n      if (!/^[a-f0-9]{8}(\\-[a-f0-9]{4}){3}\\-([a-f0-9]{12})$/.test(uuid)) {\n        return false\n      }\n\n      if (uuid === \"00000000-0000-0000-0000-000000000000\") {\n        return {version: undefined, variant: \"nil\", format: \"ascii\"}\n      }\n\n      return {\n        version: (hex2byte[uuid[14] + uuid[15]] & 0xf0) >> 4,\n        variant: getVariant((hex2byte[uuid[19] + uuid[20]] & 0xe0) >> 5),\n        format: \"ascii\"\n      }\n    }\n\n    if (Buffer.isBuffer(uuid)) {\n      if (uuid.length < offset + 16) {\n        return false\n      }\n\n      let i = 0\n      for (; i < 16; i++) {\n        if (uuid[offset + i] !== 0) {\n          break\n        }\n      }\n      if (i === 16) {\n        return {version: undefined, variant: \"nil\", format: \"binary\"}\n      }\n\n      return {\n        version: (uuid[offset + 6] & 0xf0) >> 4,\n        variant: getVariant((uuid[offset + 8] & 0xe0) >> 5),\n        format: \"binary\"\n      }\n    }\n\n    throw newError(\"Unknown type of uuid\", \"ERR_UNKNOWN_UUID_TYPE\")\n  }\n\n  // read stringified uuid into a Buffer\n  static parse(input: string) {\n    const buffer = Buffer.allocUnsafe(16)\n    let j = 0\n    for (let i = 0; i < 16; i++) {\n      buffer[i] = hex2byte[input[j++] + input[j++]]\n      if (i === 3 || i === 5 || i === 7 || i === 9) {\n        j += 1\n      }\n    }\n    return buffer\n  }\n}\n\n// according to rfc4122#section-4.1.1\nfunction getVariant(bits: number) {\n    switch (bits) {\n        case 0: case 1: case 3:\n            return \"ncs\"\n        case 4: case 5:\n            return \"rfc4122\"\n        case 6:\n            return \"microsoft\"\n        default:\n            return \"future\"\n    }\n}\n\nexport interface UuidOptions {\n  encoding?: string\n\n  name?: string\n\n  namespace?: string | UUID | Buffer\n}\n\nenum UuidEncoding {\n  ASCII, BINARY, OBJECT\n}\n\n// v1\nfunction uuidTimeBased(nodeId: Buffer, encoding: UuidEncoding = UuidEncoding.ASCII) {\n  let mTime = Date.now()\n  let nTime = lastNTime + 1\n  const delta = (mTime - lastMTime) + (nTime - lastNTime) / 10000\n\n  if (delta < 0) {\n    clockSeq = (clockSeq + 1) & 0x3fff\n    nTime = 0\n  }\n  else if (mTime > lastMTime) {\n    nTime = 0\n  }\n  else if (nTime >= 10000) {\n    return moreThan10000\n  }\n\n  lastMTime = mTime\n  lastNTime = nTime\n\n  // unix timestamp to gregorian epoch as per rfc4122#section-4.5\n  mTime += 12219292800000\n\n  const buffer = Buffer.allocUnsafe(16)\n  const myClockSeq = clockSeq\n  const timeLow = ((mTime & 0xfffffff) * 10000 + nTime) % 0x100000000\n  const timeHigh = (mTime / 0x100000000 * 10000) & 0xfffffff\n\n  buffer[0] = timeLow >>> 24 & 0xff\n  buffer[1] = timeLow >>> 16 & 0xff\n  buffer[2] = timeLow >>> 8 & 0xff\n  buffer[3] = timeLow & 0xff\n\n  buffer[4] = timeHigh >>> 8 & 0xff\n  buffer[5] = timeHigh & 0xff\n\n  buffer[6] = (timeHigh >>> 24 & 0x0f) | 0x10\n  buffer[7] = (timeHigh >>> 16 & 0x3f) | 0x80\n\n  buffer[8] = myClockSeq >>> 8\n  buffer[9] = myClockSeq & 0xff\n\n  let result: any\n  switch (encoding) {\n    case UuidEncoding.BINARY:\n      buffer[10] = nodeId[0]\n      buffer[11] = nodeId[1]\n      buffer[12] = nodeId[2]\n      buffer[13] = nodeId[3]\n      buffer[14] = nodeId[4]\n      buffer[15] = nodeId[5]\n      result = buffer\n      break\n    case UuidEncoding.OBJECT:\n      buffer[10] = nodeId[0]\n      buffer[11] = nodeId[1]\n      buffer[12] = nodeId[2]\n      buffer[13] = nodeId[3]\n      buffer[14] = nodeId[4]\n      buffer[15] = nodeId[5]\n      result = new UUID(buffer)\n      break\n    default:\n      result = byte2hex[buffer[0]] + byte2hex[buffer[1]] +\n        byte2hex[buffer[2]] + byte2hex[buffer[3]] + \"-\" +\n        byte2hex[buffer[4]] + byte2hex[buffer[5]] + \"-\" +\n        byte2hex[buffer[6]] + byte2hex[buffer[7]] + \"-\" +\n        byte2hex[buffer[8]] + byte2hex[buffer[9]] + \"-\" +\n        byte2hex[nodeId[0]] + byte2hex[nodeId[1]] +\n        byte2hex[nodeId[2]] + byte2hex[nodeId[3]] +\n        byte2hex[nodeId[4]] + byte2hex[nodeId[5]]\n      break\n  }\n  return result\n}\n\n// v3 + v5\nfunction uuidNamed(name: string | Buffer, hashMethod: string, version: number, namespace: Buffer, encoding: UuidEncoding = UuidEncoding.ASCII) {\n  const hash = createHash(hashMethod)\n\n  const nameIsNotAString = typeof name !== \"string\"\n  if (nameIsNotAString && !Buffer.isBuffer(name)) {\n    throw newError(invalidName, \"ERR_INVALID_UUID_NAME\")\n  }\n\n  hash.update(namespace)\n  hash.update(name, nameIsNotAString ? \"latin1\" : \"utf8\")\n\n  const buffer = hash.digest()\n  let result: any\n  switch (encoding) {\n    case UuidEncoding.BINARY:\n      buffer[6] = (buffer[6] & 0x0f) | version\n      buffer[8] = (buffer[8] & 0x3f) | 0x80\n      result = buffer\n      break\n    case UuidEncoding.OBJECT:\n      buffer[6] = (buffer[6] & 0x0f) | version\n      buffer[8] = (buffer[8] & 0x3f) | 0x80\n      result = new UUID(buffer)\n      break\n    default:\n      result = byte2hex[buffer[0]] + byte2hex[buffer[1]] +\n        byte2hex[buffer[2]] + byte2hex[buffer[3]] + \"-\" +\n        byte2hex[buffer[4]] + byte2hex[buffer[5]] + \"-\" +\n        byte2hex[(buffer[6] & 0x0f) | version] +\n        byte2hex[buffer[7]] + \"-\" +\n        byte2hex[(buffer[8] & 0x3f) | 0x80] +\n        byte2hex[buffer[9]] + \"-\" +\n        byte2hex[buffer[10]] + byte2hex[buffer[11]] +\n        byte2hex[buffer[12]] + byte2hex[buffer[13]] +\n        byte2hex[buffer[14]] + byte2hex[buffer[15]]\n      break\n  }\n  return result\n}\n\nfunction stringify(buffer: Buffer) {\n  return byte2hex[buffer[0]] + byte2hex[buffer[1]] +\n    byte2hex[buffer[2]] + byte2hex[buffer[3]] + \"-\" +\n    byte2hex[buffer[4]] + byte2hex[buffer[5]] + \"-\" +\n    byte2hex[buffer[6]] + byte2hex[buffer[7]] + \"-\" +\n    byte2hex[buffer[8]] + byte2hex[buffer[9]] + \"-\" +\n    byte2hex[buffer[10]] + byte2hex[buffer[11]] +\n    byte2hex[buffer[12]] + byte2hex[buffer[13]] +\n    byte2hex[buffer[14]] + byte2hex[buffer[15]]\n}\n\n// according to rfc4122#section-4.1.7\nexport const nil = new UUID(\"00000000-0000-0000-0000-000000000000\")\n\n// UUID.v4 = uuidRandom\n\n// UUID.v4fast = uuidRandomFast\n\n// UUID.v3 = function(options, callback) {\n//     return uuidNamed(\"md5\", 0x30, options, callback)\n// }"]}
