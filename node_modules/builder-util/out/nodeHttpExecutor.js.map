{"version":3,"file":"nodeHttpExecutor.js","sourceRoot":"","sources":["../src/nodeHttpExecutor.ts"],"names":[],"mappings":";;;;;;;AAAA,AAAO,AAAE,AAAY,AAAmB,AAAM,AAAsB;;;;;;;;;;AACpE,AAAO,AAAE,AAAQ,AAAI,AAAS,AAAE,AAAM,AAAe;;;;;;;;;;AACrD,AAAO,AAAiB,AAAO,AAAI,AAAW,AAAE,AAAM,AAAM;;;;;;;;;;AAC5D,AAAO,AAAK,AAAK,AAAM,AAAO,AAE9B,AAAM;;;;;;;;;;;;MAAwB,yBAAQ,AAA2B;AAC/D,AAAyC;AACzC,AAAQ,WAAC,AAAW,KAAE,AAAmB,aAAE,AAAwB;AACjE,WAAO,AAAS,6BAAC,AAAG,KAAE,AAAW,aAAE,AAAO,WAAI,AAAI,AAAC,AAAC,OAAC,AAAI,AAAC,AAAC,OAAC,AAAO,QAAC,AAAM,AAAC,QACxE,AAAI,KAAC,AAAG,AAAE,MAAC,AAAW,AAAC,AAC5B;AAAC,IAED,AAAmC;AACnC,AAAqC;;;AACrC,AAAS,YAAC,AAAY,SAAE,AAAiC;AACvD,WAAO,CAAC,AAAO,QAAC,AAAQ,aAAK,AAAO,AAAC,AAAC,UAAC,AAAW,AAAC,AAAC,kBAAC,AAAK,QAAC,AAAO,AAAC,SAAC,AAAO,SAAE,AAAQ,AAAC,AACxF;AAAC,AACF,AAED,AAAM;;;;;AAAC,MAAM,AAAY,eAAqB,IAAI,AAAgB,AAAE","sourcesContent":["import { HttpExecutor, DownloadOptions } from \"builder-util-runtime\"\nimport { download as _download } from \"./binDownload\"\nimport { ClientRequest, request as httpRequest } from \"http\"\nimport * as https from \"https\"\n\nexport class NodeHttpExecutor extends HttpExecutor<ClientRequest> {\n  // used only in tests of electron-updater\n  download(url: string, destination: string, options: DownloadOptions): Promise<string> {\n    return _download(url, destination, options == null ? null : options.sha512)\n      .then(() => destination)\n  }\n\n  // noinspection JSMethodCanBeStatic\n  // noinspection JSUnusedGlobalSymbols\n  doRequest(options: any, callback: (response: any) => void): any {\n    return (options.protocol === \"http:\" ? httpRequest : https.request)(options, callback)\n  }\n}\n\nexport const httpExecutor: NodeHttpExecutor = new NodeHttpExecutor()"]}
