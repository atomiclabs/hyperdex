{"version":3,"file":"licenseButtons.js","sourceRoot":"","sources":["../src/licenseButtons.ts"],"names":[],"mappings":"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","sourcesContent":["import { log } from \"builder-util\"\nimport { PackageBuilder } from \"builder-util/out/api\"\nimport { getLicenseAssets } from \"builder-util/out/license\"\nimport { readFile } from \"fs-extra-p\"\nimport * as iconv from \"iconv-lite\"\nimport { safeLoad } from \"js-yaml\"\nimport { serializeString } from \"./dmgUtil\"\nimport { getDefaultButtons } from \"./licenseDefaultButtons\"\n\nexport async function getLicenseButtonsFile(packager: PackageBuilder): Promise<Array<LicenseButtonsFile>> {\n  return getLicenseAssets((await packager.resourceList)\n    .filter(it => {\n      const name = it.toLowerCase()\n      // noinspection SpellCheckingInspection\n      return name.startsWith(\"licensebuttons_\") && (name.endsWith(\".json\") || name.endsWith(\".yml\"))\n    }), packager)\n}\n\nexport interface LicenseButtonsFile {\n  file: string\n  lang: string\n  langWithRegion: string\n  langName: string\n}\n\nexport async function getLicenseButtons(licenseButtonFiles: Array<LicenseButtonsFile>, langWithRegion: string, id: number, name: string) {\n  let data = getDefaultButtons(langWithRegion, id, name)\n\n  for (const item of licenseButtonFiles) {\n    if (item.langWithRegion !== langWithRegion) {\n      continue\n    }\n\n    try {\n      const fileData = safeLoad(await readFile(item.file, \"utf-8\")) as any\n      const buttonsStr = labelToHex(fileData.lang, item.lang, item.langWithRegion) +\n        labelToHex(fileData.agree, item.lang, item.langWithRegion) +\n        labelToHex(fileData.disagree, item.lang, item.langWithRegion) +\n        labelToHex(fileData.print, item.lang, item.langWithRegion) +\n        labelToHex(fileData.save, item.lang, item.langWithRegion) +\n        labelToHex(fileData.description, item.lang, item.langWithRegion)\n\n      data = `data 'STR#' (${id}, \"${name}\") {\\n`\n      data += serializeString(\"0006\" + buttonsStr)\n      data += `\\n};`\n\n      if (log.isDebugEnabled) {\n        log.debug({lang: item.langName, data}, `overwriting license buttons`)\n      }\n      return data\n    }\n    catch (e) {\n      log.debug({error: e}, \"cannot overwrite license buttons\")\n      return data\n    }\n  }\n\n  return data\n}\n\nfunction labelToHex(label: string, lang: string, langWithRegion: string) {\n  const lbl = hexEncode(label, lang, langWithRegion).toString().toUpperCase()\n  const len = numberToHex((lbl.length / 2))\n  return len + lbl\n}\n\nfunction numberToHex(nb: number) {\n  return (\"0\" + (nb.toString(16))).slice(-2)\n}\n\nfunction hexEncode(str: string, lang: string, langWithRegion: string) {\n  const macCodePages = getMacCodePage(lang, langWithRegion)\n  let result = \"\"\n\n  for (let i = 0; i < str.length; i++) {\n    try {\n      let hex = getMacHexCode(str, i, macCodePages)\n      if (hex === undefined) {\n        hex = \"3F\" //?\n      }\n      result += hex\n    }\n    catch (e) {\n      log.debug({error: e, char: str[i]}, \"cannot convert\")\n      result += \"3F\" //?\n    }\n  }\n\n  return result\n}\n\nfunction getMacCodePage(lang: string, langWithRegion: string) {\n  switch (lang) {\n    case \"ja\": //japanese\n      return [\"euc-jp\"] //Apple Japanese\n    case \"zh\": //chinese\n      if (langWithRegion === \"zh_CN\") {\n        return [\"gb2312\"] //Apple Simplified Chinese (GB 2312)\n      }\n      return [\"big5\"] //Apple Traditional Chinese (Big5)\n    case \"ko\": //korean\n      return [\"euc-kr\"] //Apple Korean\n    case \"ar\": //arabic\n    case \"ur\": //urdu\n      return [\"macarabic\"] //Apple Arabic\n    case \"he\": //hebrew\n      return [\"machebrew\"] //Apple Hebrew\n    case \"el\": //greek\n    case \"elc\": //greek\n      return [\"macgreek\"] //Apple Greek\n    case \"ru\": //russian\n    case \"be\": //belarussian\n    case \"sr\": //serbian\n    case \"bg\": //bulgarian\n    case \"uz\": //uzbek\n      return [\"maccyrillic\"] //Apple Macintosh Cyrillic\n    case \"ro\": //romanian\n      return [\"macromania\"] //Apple Romanian\n    case \"uk\": //ukrainian\n      return [\"macukraine\"] //Apple Ukrainian\n    case \"th\": //thai\n      return [\"macthai\"] //Apple Thai\n    case \"et\": //estonian\n    case \"lt\": //lithuanian\n    case \"lv\": //latvian\n    case \"pl\": //polish\n    case \"hu\": //hungarian\n    case \"cs\": //czech\n    case \"sk\": //slovak\n      return [\"maccenteuro\"] //Apple Macintosh Central Europe\n    case \"is\": //icelandic\n    case \"fo\": //faroese\n      return [\"maciceland\"] //Apple Icelandic\n    case \"tr\": //turkish\n      return [\"macturkish\"] //Apple Turkish\n    case \"hr\": //croatian\n    case \"sl\": //slovenian\n      return [\"maccroatian\"] //Apple Croatian\n    default:\n      return [\"macroman\"] //Apple Macintosh Roman\n  }\n}\n\nfunction getMacHexCode(str: string, i: number, macCodePages: any) {\n  const code = str.charCodeAt(i)\n  if (code < 128) {\n    return code.toString(16)\n  }\n  else if (code < 256) {\n    return iconv.encode(str[i], \"macroman\").toString(\"hex\")\n  }\n  else {\n    for (let i = 0; i < macCodePages.length; i++) {\n      const result = iconv.encode(str[i], macCodePages[i]).toString(\"hex\")\n      if (result !== undefined) {\n        return result\n      }\n    }\n  }\n  return code\n}"]}
