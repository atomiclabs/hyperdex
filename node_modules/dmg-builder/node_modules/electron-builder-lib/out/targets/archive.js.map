{"version":3,"file":"archive.js","sourceRoot":"","sources":["../../src/targets/archive.ts"],"names":[],"mappings":"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","sourcesContent":["import { path7za } from \"7zip-bin\"\nimport { debug7z, debug7zArgs, exec } from \"builder-util\"\nimport { exists, unlinkIfExists } from \"builder-util/out/fs\"\nimport { move } from \"fs-extra-p\"\nimport * as path from \"path\"\nimport { TmpDir } from \"temp-file\"\nimport { CompressionLevel } from \"../core\"\nimport { getLinuxToolsPath } from \"./tools\"\n\n/** @internal */\nexport async function tar(compression: CompressionLevel | any | any, format: string, outFile: string, dirToArchive: string, isMacApp: boolean, tempDirManager: TmpDir): Promise<void> {\n  const tarFile = await tempDirManager.getTempFile({suffix: \".tar\"})\n  const tarArgs = debug7zArgs(\"a\")\n  tarArgs.push(tarFile)\n  tarArgs.push(path.basename(dirToArchive))\n\n  await Promise.all([\n    exec(path7za, tarArgs, {cwd: path.dirname(dirToArchive)}),\n    // remove file before - 7z doesn't overwrite file, but update\n    unlinkIfExists(outFile),\n  ])\n\n  if (!isMacApp) {\n    await exec(path7za, [\"rn\", tarFile, path.basename(dirToArchive), path.basename(outFile, `.${format}`)])\n  }\n\n  if (format === \"tar.lz\") {\n    // noinspection SpellCheckingInspection\n    let lzipPath = \"lzip\"\n    if (process.platform === \"darwin\") {\n      lzipPath = path.join(await getLinuxToolsPath(), \"bin\", lzipPath)\n    }\n    await exec(lzipPath, [compression === \"store\" ? \"-1\" : \"-9\", \"--keep\" /* keep (don't delete) input files */, tarFile])\n    // bloody lzip creates file in the same dir where input file with postfix `.lz`, option --output doesn't work\n    await move(`${tarFile}.lz`, outFile)\n    return\n  }\n\n  const args = compute7zCompressArgs(format === \"tar.xz\" ? \"xz\" : (format === \"tar.bz2\" ? \"bzip2\" : \"gzip\"), {\n    isRegularFile: true,\n    method: \"DEFAULT\",\n    compression,\n  })\n  args.push(outFile, tarFile)\n  await exec(path7za, args, {\n    cwd: path.dirname(dirToArchive),\n  }, debug7z.enabled)\n}\n\nexport interface ArchiveOptions {\n  compression?: CompressionLevel | null\n\n  /**\n   * @default false\n   */\n  withoutDir?: boolean\n\n  /**\n   * @default true\n   */\n  solid?: boolean\n\n  /**\n   * @default true\n   */\n  isArchiveHeaderCompressed?: boolean\n\n  listFile?: string\n\n  dictSize?: number\n  excluded?: Array<string> | null\n\n  // DEFAULT allows to disable custom logic and do not pass method switch at all\n  method?: \"Copy\" | \"LZMA\" | \"Deflate\" | \"DEFAULT\"\n\n  isRegularFile?: boolean\n}\n\nexport function compute7zCompressArgs(format: string, options: ArchiveOptions = {}) {\n  let storeOnly = options.compression === \"store\"\n  const args = debug7zArgs(\"a\")\n\n  let isLevelSet = false\n  if (process.env.ELECTRON_BUILDER_COMPRESSION_LEVEL != null) {\n    storeOnly = false\n    args.push(`-mx=${process.env.ELECTRON_BUILDER_COMPRESSION_LEVEL}`)\n    isLevelSet = true\n  }\n\n  if (format === \"zip\" && options.compression === \"maximum\") {\n    // http://superuser.com/a/742034\n    args.push(\"-mfb=258\", \"-mpass=15\")\n  }\n\n  if (!isLevelSet && !storeOnly) {\n    args.push(\"-mx=9\")\n  }\n\n  if (options.dictSize != null) {\n    args.push(`-md=${options.dictSize}m`)\n  }\n\n  // https://sevenzip.osdn.jp/chm/cmdline/switches/method.htm#7Z\n  // https://stackoverflow.com/questions/27136783/7zip-produces-different-output-from-identical-input\n  // tc and ta are off by default, but to be sure, we explicitly set it to off\n  // disable \"Stores NTFS timestamps for files: Modification time, Creation time, Last access time.\" to produce the same archive for the same data\n  if (!options.isRegularFile) {\n    args.push(\"-mtc=off\")\n  }\n\n  if (format === \"7z\" || format.endsWith(\".7z\")) {\n    if (options.solid === false) {\n      args.push(\"-ms=off\")\n    }\n\n    if (options.isArchiveHeaderCompressed === false) {\n      args.push(\"-mhc=off\")\n    }\n\n    // args valid only for 7z\n    // -mtm=off disable \"Stores last Modified timestamps for files.\"\n    args.push(\"-mtm=off\", \"-mta=off\")\n  }\n\n  if (options.method != null) {\n    if (options.method !== \"DEFAULT\") {\n      args.push(`-mm=${options.method}`)\n    }\n  }\n  else if (format === \"zip\" || storeOnly) {\n    args.push(`-mm=${storeOnly ? \"Copy\" : \"Deflate\"}`)\n  }\n\n  if (format === \"zip\") {\n    // -mcu switch:  7-Zip uses UTF-8, if there are non-ASCII symbols.\n    // because default mode: 7-Zip uses UTF-8, if the local code page doesn't contain required symbols.\n    // but archive should be the same regardless where produced\n    args.push(\"-mcu\")\n  }\n  return args\n}\n\n// 7z is very fast, so, use ultra compression\n/** @internal */\nexport async function archive(format: string, outFile: string, dirToArchive: string, options: ArchiveOptions = {}): Promise<string> {\n  const args = compute7zCompressArgs(format, options)\n  // remove file before - 7z doesn't overwrite file, but update\n  await unlinkIfExists(outFile)\n\n  args.push(outFile, options.listFile == null ? (options.withoutDir ? \".\" : path.basename(dirToArchive)) : `@${options.listFile}`)\n  if (options.excluded != null) {\n    for (const mask of options.excluded) {\n      args.push(`-xr!${mask}`)\n    }\n  }\n\n  try {\n    await exec(path7za, args, {\n      cwd: options.withoutDir ? dirToArchive : path.dirname(dirToArchive),\n    }, debug7z.enabled)\n  }\n  catch (e) {\n    if (e.code === \"ENOENT\" && !(await exists(dirToArchive))) {\n      throw new Error(`Cannot create archive: \"${dirToArchive}\" doesn't exist`)\n    }\n    else {\n      throw e\n    }\n  }\n\n  return outFile\n}"]}
