{"version":3,"file":"arch.js","sourceRoot":"","sources":["../src/arch.ts"],"names":[],"mappings":";;;;;;;;;AAAA,IAAY,AAEX;;;AAFD,WAAY,AAAI;AACd,2BAAI;AAAE,0BAAG;AAAE,6BAAM;AAAE,4BAAK,AAC1B;AAAC,GAFW,AAAI,wBAAJ,AAAI,OAEf,AAID,AAAM;;2BAA4B,AAAU;AAC1C,UAAQ,AAAI,AAAE;AACZ,SAAK,AAAI,KAAC,AAAG;AACX,aAAO,AAAO;;AAChB,SAAK,AAAI,KAAC,AAAI;AACZ,aAAO,AAAM;;AACf,SAAK,AAAI,KAAC,AAAM;AACd,aAAO,AAAQ;;AACjB,SAAK,AAAI,KAAC,AAAK;AACb,aAAO,AAAO;;AAEhB;AACE,YAAM,IAAI,AAAK,AAAC,0BAAoB,AAAI,IAAE,AAAC,AAC9C,AACH;;AAAC,AAED,AAAM;;uBAAwB,AAAU;AACtC,SAAO,AAAI,SAAK,AAAI,KAAC,AAAG,AAAC,AAAC,MAAC,AAAE,AAAC,AAAC,AAAC,SAAI,AAAI,KAAC,AAAI,AAAC,KAAE,AAClD;AAAC,AAED,AAAM;;wBAAyB,AAAY;AACzC,UAAQ,AAAI,AAAE;AACZ,SAAK,AAAK;AACR,aAAO,AAAI,KAAC,AAAG;;AACjB,SAAK,AAAM;AACT,aAAO,AAAI,KAAC,AAAI;;AAClB,SAAK,AAAO;AACV,aAAO,AAAI,KAAC,AAAK;;AACnB,SAAK,AAAQ;AACX,aAAO,AAAI,KAAC,AAAM;;AAEpB;AACE,YAAM,IAAI,AAAK,AAAC,0BAAoB,AAAI,IAAE,AAAC,AAC9C,AACH;;AAAC","sourcesContent":["export enum Arch {\n  ia32, x64, armv7l, arm64\n}\n\nexport type ArchType = \"x64\" | \"ia32\" | \"armv7l\" | \"arm64\"\n\nexport function toLinuxArchString(arch: Arch): string {\n  switch (arch) {\n    case Arch.x64:\n      return \"amd64\"\n    case Arch.ia32:\n      return \"i386\"\n    case Arch.armv7l:\n      return \"armv7l\"\n    case Arch.arm64:\n      return \"arm64\"\n\n    default:\n      throw new Error(`Unsupported arch ${arch}`)\n  }\n}\n\nexport function getArchSuffix(arch: Arch): string {\n  return arch === Arch.x64 ? \"\" : `-${Arch[arch]}`\n}\n\nexport function archFromString(name: string): Arch {\n  switch (name) {\n    case \"x64\":\n      return Arch.x64\n    case \"ia32\":\n      return Arch.ia32\n    case \"arm64\":\n      return Arch.arm64\n    case \"armv7l\":\n      return Arch.armv7l\n\n    default:\n      throw new Error(`Unsupported arch ${name}`)\n  }\n}"]}
