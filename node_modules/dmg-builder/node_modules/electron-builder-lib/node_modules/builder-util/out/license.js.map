{"version":3,"file":"license.js","sourceRoot":"","sources":["../src/license.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,AAAO,AAAK,AAAI,AAAM,AAAM;;AAE5B,AAAO,AAAE,AAAY,AAAE,AAAgB,AAAE,AAAM,AAAS,AAExD,AAAM;;;;;;;;;;;;0BAA2B,AAAwB,WAAE,AAAwB;AACjF,mBAAiB,AAAI,KAAC,CAAC,AAAC,GAAE,AAAC,AAAE,AAAE;AAC7B,UAAM,AAAE,KAAG,AAAC,EAAC,AAAQ,SAAC,AAAK,AAAC,AAAC,AAAC,SAAC,AAAC,AAAC,AAAC,IAAC,AAAG;AACtC,UAAM,AAAE,KAAG,AAAC,EAAC,AAAQ,SAAC,AAAK,AAAC,AAAC,AAAC,SAAC,AAAC,AAAC,AAAC,IAAC,AAAG;AACtC,WAAO,AAAE,OAAK,AAAE,AAAC,AAAC,KAAC,AAAC,EAAC,AAAa,cAAC,AAAC,AAAC,AAAC,AAAC,KAAC,AAAE,KAAG,AAAE,AACjD;AAAC,AAAC,GAJK,AAAS,EAKb,AAAG,IAAC,AAAI,AAAC,AAAE;AACV,QAAI,AAAI,OAAG,AAAI,KAAC,AAAK,MAAC,AAAY,AAAE,cAAC,AAAC,AAAC;AACvC,QAAI,AAAc;;AAClB,QAAI,AAAI,KAAC,AAAQ,SAAC,AAAG,AAAC,MAAE;AACtB,AAAc,uBAAG,AAAI;AACrB,AAAI,aAAG,AAAc,eAAC,AAAS,UAAC,AAAC,GAAE,AAAI,KAAC,AAAO,QAAC,AAAG,AAAC,AAAC;AACtD,WACI;AACH,AAAI,aAAG,AAAI,KAAC,AAAW,AAAE;AACzB,AAAc,uBAAG,AAAgB,+BAAC,AAAI,AAAC;AACxC;;AACD;AAAQ,AAAI,YAAE,AAAI,KAAC,AAAI,KAAC,AAAQ,SAAC,AAAiB,mBAAE,AAAI,AAAC;AAAE,AAAI;AAAE,AAAc;AAAE,AAAQ,gBAAG,AAAoB,sBAAC,AAAI,AAAC,AAAC,AACzH;AADS;AACR,AAAC,AACN;AAAC,AAED,AAAM;;;2CAAC,AAAK,WAAsC,AAAiC,QAAE,AAAwB;AAC3G,UAAM,AAAa,gBAAkB,AAAE;;AACvC,SAAK,MAAM,AAAI,QAAI,CAAC,AAAS,WAAE,AAAM,AAAC,SAAE;AACtC,WAAK,MAAM,AAAG,OAAI,CAAC,AAAK,OAAE,AAAK,OAAE,AAAM,AAAC,SAAE;AACxC,AAAa,sBAAC,AAAI,AAAC,QAAG,AAAI,QAAI,AAAG,GAAE,AAAC;AACpC,AAAa,sBAAC,AAAI,AAAC,QAAG,AAAI,KAAC,AAAW,AAAE,iBAAI,AAAG,GAAE,AAAC;AAClD,AAAa,sBAAC,AAAI,AAAC,QAAG,AAAI,QAAI,AAAG,IAAC,AAAW,AAAE,aAAE,AAAC;AAClD,AAAa,sBAAC,AAAI,AAAC,QAAG,AAAI,KAAC,AAAW,AAAE,iBAAI,AAAG,IAAC,AAAW,AAAE,aAAE,AAAC;AACjE;AACF;;AAED,WAAO,MAAM,AAAQ,SAAC,AAAW,YAAC,AAAM,QAAE,GAAG,AAAa,AAAC,AAC7D;AAAC,AAED,AAAM;;;;;;;;;;4CAAC,AAAK,WAA0B,AAAwB;AAC5D,6BAAyB,MAAM,AAAQ,SAAC,AAAY,AAAC,cAClD,AAAM,OAAC,AAAE,AAAC,AAAE;AACX,YAAM,AAAI,OAAG,AAAE,GAAC,AAAW,AAAE;AAC7B,aAAO,CAAC,AAAI,KAAC,AAAU,WAAC,AAAU,AAAC,eAAI,AAAI,KAAC,AAAU,WAAC,AAAO,AAAC,AAAC,AAAI,cAAC,AAAI,KAAC,AAAQ,SAAC,AAAM,AAAC,WAAI,AAAI,KAAC,AAAQ,SAAC,AAAM,AAAC,AAAC,AACtH;AAAC,AAAC,KAJoB,CAAjB,AAAgB,EAIjB,AAAQ,AAAC,AACjB;AAAC","sourcesContent":["import * as path from \"path\"\nimport { PackageBuilder } from \"./api\"\nimport { langIdToName, toLangWithRegion } from \"./langs\"\n\nexport function getLicenseAssets(fileNames: Array<string>, packager: PackageBuilder) {\n  return fileNames.sort((a, b) => {\n    const aW = a.includes(\"_en\") ? 0 : 100\n    const bW = b.includes(\"_en\") ? 0 : 100\n    return aW === bW ? a.localeCompare(b) : aW - bW\n  })\n    .map(file => {\n      let lang = file.match(/_([^.]+)\\./)![1]\n      let langWithRegion\n      if (lang.includes(\"_\")) {\n        langWithRegion = lang\n        lang = langWithRegion.substring(0, lang.indexOf(\"_\"))\n      }\n      else {\n        lang = lang.toLowerCase()\n        langWithRegion = toLangWithRegion(lang)\n      }\n      return {file: path.join(packager.buildResourcesDir, file), lang, langWithRegion, langName: (langIdToName as any)[lang]}\n    })\n}\n\nexport async function getNotLocalizedLicenseFiles(custom: string | null | undefined, packager: PackageBuilder): Promise<string | null> {\n  const possibleFiles: Array<string> = []\n  for (const name of [\"license\", \"eula\"]) {\n    for (const ext of [\"rtf\", \"txt\", \"html\"]) {\n      possibleFiles.push(`${name}.${ext}`)\n      possibleFiles.push(`${name.toUpperCase()}.${ext}`)\n      possibleFiles.push(`${name}.${ext.toUpperCase()}`)\n      possibleFiles.push(`${name.toUpperCase()}.${ext.toUpperCase()}`)\n    }\n  }\n\n  return await packager.getResource(custom, ...possibleFiles)\n}\n\nexport async function getLicenseFiles(packager: PackageBuilder): Promise<Array<LicenseFile>> {\n  return getLicenseAssets((await packager.resourceList)\n    .filter(it => {\n      const name = it.toLowerCase()\n      return (name.startsWith(\"license_\") || name.startsWith(\"eula_\")) && (name.endsWith(\".rtf\") || name.endsWith(\".txt\"))\n    }), packager)\n}\n\nexport interface LicenseFile {\n  file: string\n  lang: string\n  langWithRegion: string\n  langName: string\n}"]}
