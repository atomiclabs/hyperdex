{"version":3,"file":"tools.js","sourceRoot":"","sources":["../../src/targets/tools.ts"],"names":[],"mappings":"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","sourcesContent":["import { getBin, getBinFromGithub } from \"builder-util/out/binDownload\"\nimport { Lazy } from \"lazy-val\"\nimport * as path from \"path\"\nimport { Platform } from \"../core\"\n\nexport function getLinuxToolsPath() {\n  //noinspection SpellCheckingInspection\n  return getBinFromGithub(\"linux-tools\", \"mac-10.12.3\", \"SQ8fqIRVXuQVWnVgaMTDWyf2TLAJjJYw3tRSqQJECmgF6qdM7Kogfa6KD49RbGzzMYIFca9Uw3MdsxzOPRWcYw==\")\n}\n\nexport const fpmPath = new Lazy(() => {\n  if (process.platform === \"win32\" || process.env.USE_SYSTEM_FPM === \"true\") {\n    return Promise.resolve(\"fpm\")\n  }\n\n  const osAndArch = process.platform === \"darwin\" ? \"mac\" : `linux-x86${process.arch === \"ia32\" ? \"\" : \"_64\"}`\n\n  if (process.platform === \"darwin\") {\n    //noinspection SpellCheckingInspection\n    return getBinFromGithub(\"fpm\", \"1.9.3-20150715-2.2.2-mac\", \"oXfq+0H2SbdrbMik07mYloAZ8uHrmf6IJk+Q3P1kwywuZnKTXSaaeZUJNlWoVpRDWNu537YxxpBQWuTcF+6xfw==\")\n      .then(it => path.join(it, \"fpm\"))\n  }\n\n  //noinspection SpellCheckingInspection\n  const checksum = process.arch === \"ia32\" ? \"OnzvBdsHE5djcXcAT87rwbnZwS789ZAd2ehuIO42JWtBAHNzXKxV4o/24XFX5No4DJWGO2YSGQttW+zn7d/4rQ==\" : \"fcKdXPJSso3xFs5JyIJHG1TfHIRTGDP0xhSBGZl7pPZlz4/TJ4rD/q3wtO/uaBBYeX0qFFQAFjgu1uJ6HLHghA==\"\n  return getBinFromGithub(\"fpm\", `1.9.3-2.3.1-${osAndArch}`, checksum)\n    .then(it => path.join(it, \"fpm\"))\n})\n\n// noinspection JSUnusedGlobalSymbols\nexport function prefetchBuildTools(): Promise<any> {\n  // yes, we starting to use native Promise\n  return fpmPath.value\n}\n\nexport function getZstd() {\n  // noinspection SpellCheckingInspection\n  return getTool({\n    name: \"zstd\",\n    version: \"1.3.3\",\n    mac: \"RnFYU+gEieQFCu943WEmh++PT5TZjDSqSCZvZj7ArfVkc+JS+DdGi30/466gqx9VFKsk6XpYrCpZNryFSvDOuw==\",\n    \"linux-x64\": \"M1YpBtWX9C99hwRHF8bOLdN5bUFChMwWRc/NzGSwG48VVtegEV2RCFqbT1v0ZcSLC54muhOtK1VgMEmTKr0ouQ==\",\n    \"win-ia32\": \"uUG8l+JQZtgFOq5G9lg3ryABiFA2gv14inJTAmpprywmbVfCVe++ikzJcjg5ZdLKhYDcB3nIsKE5c7pWY7+1yA==\",\n    \"win-x64\": \"lBCx8nuRkEu8oQqgXosuO9e35BQOSyugFaK5ExBiTKh6qkv6amsYEUNELZGmEqH+FXscagxq+7+QUYkWJfmROQ==\",\n  })\n}\n\nexport function getAria() {\n  const platform = Platform.current()\n  const archQualifier = platform === Platform.MAC ? \"\" : `-${process.arch}`\n\n  let checksum = \"\"\n  if (platform === Platform.MAC) {\n    // noinspection SpellCheckingInspection\n    checksum = \"UjstpQUAtoP/sZ9SNuWwIN1WyDfvr1V3bzLGzTZCt1IqQsf9YwBSo0jrXMMRZOqv1sy5EOvp5nyC4VvJZCRVuQ==\"\n  }\n  else if (platform === Platform.WINDOWS) {\n    // noinspection SpellCheckingInspection\n    checksum = process.arch === \"ia32\" ?\n      \"aulZig14OCHqj5qUWDvIAacibzW9k+gfDGDeECzWDrF7FPYzI+Vn7Q7QnW/FXNyNnbe8PeYawTlGzD3vJxLQWg==\" :\n      \"zksKH0Uazwtc/vfGSVy+tzsNou+thSamAGTKt8P1DLoNkdSz9ueaIFoJ7jt8jlDds8Z6Rrxls6IFkZRBDxiyfg==\"\n  }\n\n  //noinspection SpellCheckingInspection\n  return getBinFromGithub(`aria2-${platform.buildConfigurationKey}${archQualifier}`, \"1.33.1\", checksum)\n    .then(it => path.join(it, `aria2c${platform === Platform.WINDOWS ? \".exe\" : \"\"}`))\n}\n\nexport interface ToolDescriptor {\n  name: string\n  version: string\n\n  repository?: string\n\n  mac: string\n  \"linux-ia32\"?: string\n  \"linux-x64\"?: string\n  \"linux-armv7\"?: string\n  \"linux-armv8\"?: string\n\n  \"win-ia32\": string\n  \"win-x64\": string\n}\n\nexport function getTool(descriptor: ToolDescriptor): Promise<string> {\n  let arch = process.arch\n  if (arch === \"arm\") {\n    arch = \"armv7\"\n  }\n  else if (arch === \"arm64\") {\n    arch = \"armv8\"\n  }\n\n  const platform = Platform.current()\n  const checksum = platform === Platform.MAC ? descriptor.mac : (descriptor as any)[`${platform.buildConfigurationKey}-${arch}`]\n  if (checksum == null) {\n    throw new Error(`Checksum not specified for ${platform}:${arch}`)\n  }\n\n  const archQualifier = platform === Platform.MAC ? \"\" : `-${arch}`\n\n  // https://github.com/develar/block-map-builder/releases/download/v0.0.1/block-map-builder-v0.0.1-win-x64.7z\n  const version = descriptor.version\n  const name = descriptor.name\n  const repository = descriptor.repository || \"electron-userland/electron-builder-binaries\"\n  const tagPrefix = descriptor.repository == null ? `${name}-` : \"v\"\n  return getBin(`${name}-${version}-${process.arch}`, `https://github.com/${repository}/releases/download/${tagPrefix}${version}/${name}-v${version}-${platform.buildConfigurationKey}${archQualifier}.7z`, checksum)\n    .then(it => path.join(it, `${name}${platform === Platform.WINDOWS ? \".exe\" : \"\"}`))\n}"]}
